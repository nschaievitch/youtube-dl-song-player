{"version":3,"sources":["components/SongResult.module.scss","components/SearchBar.module.scss","components/SearchBar.js","components/SongResult.js","components/Results.js","components/Queue.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","SearchBar","doSearch","form","useRef","className","styles","searchBar","ref","onSubmit","info","query","current","elements","value","console","log","preventDefault","type","SongResult","props","songResult","onClick","ev","target","tagName","toLowerCase","playSong","left","src","thumbnail","url","nameArtist","name","artist","right","duration","allSecs","Math","round","mins","floor","secs","getDuration","isSearch","addToQueue","_key","makeKey","removeFromQueue","Results","songs","length","map","s","Queue","queue","playFromQueue","clearQueue","goBack","style","width","display","justifyContent","alignItems","App","_url","useState","setSongs","setUrl","header","setHeader","setQueue","queueOpen","setQueueOpen","random","toString","a","axios","get","BASE_URL","params","q","res","data","key","song","process","videoId","document","title","navigator","mediaSession","metadata","window","MediaMetadata","artwork","sizes","height","setActionHandler","playPrev","playNext","slice","shiftQueue","filter","t","i","id","onClickPrevious","onClickNext","onEnded","showJumpControls","showSkipControls","customVolumeControls","RHAP_UI","VOLUME","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4fac3db4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"songResult\":\"SongResult_songResult__q2whj\",\"left\":\"SongResult_left__31ohT\",\"nameArtist\":\"SongResult_nameArtist__IcYid\",\"right\":\"SongResult_right__p00Qe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBar\":\"SearchBar_searchBar__2gF1z\"};","import { useRef } from \"react\";\nimport styles from \"./SearchBar.module.scss\";\n\nconst SearchBar = ({ doSearch }) => {\n    const form = useRef(null);\n\n    const submit = (info) => {\n        const query = form.current.elements[0].value;\n        console.log(query)\n        doSearch(query);\n        if (info) info.preventDefault();\n    };\n\n    return (\n        <form className={styles.searchBar} ref={form} onSubmit={submit}>\n            <input type=\"text\"></input>\n\n        </form>\n    );\n};\n\nexport default SearchBar;\n","import styles from \"./SongResult.module.scss\";\nimport { MdAdd } from \"react-icons/md\"\nimport { TiDelete } from \"react-icons/ti\"\n\nconst SongResult = (props) => {\n\n    const play = (ev) => {\n        if (ev.target.tagName.toLowerCase() == \"svg\" || ev.target.tagName.toLowerCase() == \"path\") return;\n        props.playSong(props)\n    }\n\n    const getDuration = (duration) => {\n        if (!duration) return \"\";\n\n        const allSecs = Math.round(duration / 1000);\n        const mins = Math.floor(allSecs/60);\n        const secs = allSecs % 60;\n        return `${mins}:${secs >= 10 ? secs : \"0\" + secs}`\n    }\n\n    const addToQueue = () => props.addToQueue({...props, _key: props.makeKey()})\n    const removeFromQueue = () => props.removeFromQueue(props._key)\n\n    const crop = (txt, chs) => {\n        if (txt.length > chs) {\n            return txt.slice(0, chs - 3) + \"...\"\n        }\n\n        return txt\n    }\n\n    return (\n        <div className={styles.songResult} onClick = {play}>\n            <div className={styles.left}>\n                <img src={props.thumbnail.url} />\n                <div className={styles.nameArtist}>\n                    <h1>{props.name}</h1>\n                    <h2>{props.artist}</h2>\n                </div>\n            </div>\n\n            <div className={styles.right}>\n                <span>{getDuration(props.duration)}</span>\n                {\n                    props.isSearch ?\n                    <MdAdd onClick={addToQueue} className=\"svg-icon\"/>\n                    : \n                    <TiDelete onClick={removeFromQueue} className=\"svg-icon\"/>\n                }\n            </div>\n\n        </div>\n    )\n}\n\nexport default SongResult","import SongResult from \"./SongResult\";\n\nconst Results = ({ songs, playSong, addToQueue, makeKey }) => {\n    return (\n        <div>\n            {songs.length > 0 ? <h1>Results</h1> : \"\"}\n            {songs.map((s) => (\n                <SongResult\n                    {...s}\n                    playSong={playSong}\n                    addToQueue={addToQueue}\n                    isSearch={true}\n                    makeKey={makeKey}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default Results;\n","import SongResult from \"./SongResult\";\nimport { MdKeyboardBackspace } from \"react-icons/md\"\n\nconst Queue = ({ queue, removeFromQueue, playFromQueue, clearQueue, goBack }) => {\n    const flexSpaceBetween = {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    }\n\n    return (\n        <>\n        <MdKeyboardBackspace onClick={goBack} className=\"svg-icon\"/>\n        <div style={flexSpaceBetween}>\n            <h1>Queue</h1>\n            <u onClick={clearQueue} className=\"clickableText\">Clear queue</u>\n        </div>\n    \n            {queue.map((s) => (\n                <SongResult {...s} isSearch={false} removeFromQueue = {removeFromQueue} playSong={playFromQueue}/>\n            ))}\n        </>\n    );\n};\n\nexport default Queue;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport SearchBar from \"./components/SearchBar\";\nimport Results from \"./components/Results\";\nimport Queue from \"./components/Queue\";\nimport AudioPlayer, { RHAP_UI } from \"react-h5-audio-player\";\nimport { MdQueueMusic } from \"react-icons/md\";\nimport \"./App.scss\";\n\n//const BASE_URL = \"/api\"\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\n\nfunction App() {\n    const [songs, setSongs] = useState([]);\n    var [url, setUrl] = useState(\"\");\n    let _url;\n    const [header, setHeader] = useState(\"\");\n    const [queue, setQueue] = useState([]);\n    const [queueOpen, setQueueOpen] = useState(false);\n    const [currSong, setCurrSong] = useState({});\n    const [history, setHistory] = useState([]);\n\n    const makeKey = () => Math.round(Math.random() * 10000000).toString(32);\n\n    const doSearch = async (query) => {\n        const res = await axios.get(BASE_URL + \"/search\", {\n            params: {\n                q: query,\n            },\n        });\n\n        setQueueOpen(false);\n\n        setSongs(\n            res.data.map((s) => {\n                const _key = makeKey();\n                return { ...s, _key, key: _key };\n            })\n        );\n    };\n\n    function handleNext(details) {\n        console.log(this.url);\n        playPrev();\n    }\n\n    const playSong = (song) => {\n        setUrl(BASE_URL + `/song/${song.videoId}/audio`);\n        _url = url;\n        setHeader(`${song.artist} - ${song.name}`);\n        document.title = `${song.artist} - ${song.name}`;\n\n        if (\"mediaSession\" in navigator) {\n            navigator.mediaSession.metadata = new window.MediaMetadata({\n                title: song.name,\n                artist: song.artist,\n                artwork: [\n                    {\n                        src: song.thumbnail.url,\n                        sizes: `${song.thumbnail.width}x${song.thumbnail.height}`,\n                        type: \"image/jpeg\",\n                    },\n                ],\n            });\n\n            navigator.mediaSession.setActionHandler(\"previoustrack\", () => {\n                console.log(_url);\n                playPrev();\n            });\n            navigator.mediaSession.setActionHandler(\"nexttrack\", () =>\n                playNext()\n            );\n        }\n    };\n\n    const playFromSearch = (song) => {\n        //clearQueue();\n        playSong(song);\n    };\n\n    const clearQueue = () => setQueue([]);\n    const addToQueue = (song) => setQueue([...queue, song]);\n    const shiftQueue = () => {\n        let song = false;\n        setQueue((queue) => {\n            if (queue.length == 0) return []\n            song = queue[0]\n            return queue.slice(1)\n        });\n\n        return song;\n    }\n    const removeFromQueue = (key) => {\n        console.log(\"removing\", key);\n        setQueue(queue.filter((t) => t._key != key));\n    };\n    const playFromQueue = (song) => {\n        console.log();\n        let i = 0;\n        while (i < queue.length && queue[i]._key != song._key) i++;\n        playSong(queue[i]);\n        setQueue(queue.slice(i + 1));\n    };\n\n    const toggleQueue = () => setQueueOpen(!queueOpen);\n\n    const playNext = () => {\n        const song = shiftQueue();\n        if (song) playSong(song);\n    };\n\n    function playPrev() {\n        setUrl((url) => {\n            console.log(url)\n            return url + \"?\";\n        });\n    }\n\n    return (\n        <main>\n            <SearchBar doSearch={doSearch} />\n            {!queueOpen ? (\n                <Results\n                    songs={songs}\n                    playSong={playFromSearch}\n                    addToQueue={addToQueue}\n                    makeKey={makeKey}\n                />\n            ) : (\n                <Queue\n                    queue={queue}\n                    removeFromQueue={removeFromQueue}\n                    clearQueue={clearQueue}\n                    playFromQueue={playFromQueue}\n                    goBack={() => setQueueOpen(false)}\n                />\n            )}\n            <div id=\"audioPlayer\">\n                <AudioPlayer\n                    src={url}\n                    header={header}\n                    onClickPrevious={playPrev}\n                    onClickNext={playNext}\n                    onEnded={playNext}\n                    showJumpControls={false}\n                    showSkipControls={true}\n                    customVolumeControls={[\n                        <MdQueueMusic\n                            onClick={toggleQueue}\n                            className=\"svg-icon\"\n                        />,\n                        RHAP_UI.VOLUME,\n                    ]}\n                />\n            </div>\n        </main>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}